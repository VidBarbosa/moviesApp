
// Generated by https://quicktype.io

import { AxiosError } from 'axios';
import { authApi } from '@api/auth.api';
import { User } from '@interfaces/auth/user.interface';

export interface LoginResponse {
  access_token: string;
}

export class AuthService {


  static login = async( email: string, password: string):Promise<LoginResponse> => {

    try {
      const { data } = await authApi.post<LoginResponse>('/auth/login', { email, password });
      console.log(data);

      return data;

    } catch (error) {
      if ( error instanceof AxiosError ) {
        console.log(error.response?.data);
        throw new Error(error.response?.data);
      }

      console.log(error);
      throw new Error('Unable to login')
    }
  }


  static checkStatus = async():Promise<LoginResponse> => {

    try {
      const { data } = await authApi.get<LoginResponse>('/auth/check-status');
      console.log(data);
      return data;

    } catch (error) {
      console.log(error);
      throw new Error('UnAuthorized');
    }
  }

  static profileUser = async():Promise<User> => {

    try {
      const { data } = await authApi.get<User>('/auth/profile');
      console.log(data);
      return data;

    } catch (error) {
      console.error(error);
      if (error instanceof AxiosError && error.response) {
        throw new Error(error.response.data.message);
      } else {
        throw new Error('UnAuthorized');
      }
    }
  }

}

